#
#                 LORICA CONFIGURATION FILE
#
#             Copyright (C) 2008 OMC Denmark ApS
#
#   COPYING AND DISTRIBUTION OF THIS FILE, WITH OR WITHOUT 
#   MODIFICATION, ARE PERMITTED IN ANY MEDIUM WITHOUT ROYALTY 
#   PROVIDED THE COPYRIGHT NOTICE AND THIS NOTICE ARE PRESERVED.
#
#                       *  ***  * 
#
#   IT IS OF VITAL IMPORTANCE THAT THIS FILE IS KEPT SECURE
#   AND INACCESSIBLE BY ANYONE EXCEPT AUTHORIZED PERSONNEL.
#
#                       *  ***  * 
#
#       -- CUSTOMIZED FOR BRUTUS SERVER INTEGRATION --
#
# This configuration file has been specially crafted to support
# integration with Brutus Server and Brutus Server clients. The 
# Interface Repository cache file "ifr.cache" must be manually 
# created unless it is contained in the distribution from 42tools.
#
# You can create the cache file by importing the Brutus IDL files 
# into the Interface Repository. IDL_ROOT is where the Brutus IDL
# files are stored. LORICA_ROOT is the installation directory of 
# Lorica. You will need Visual Studio C++ to do this.
#
# The import is accomplished in a Visual Studio command prompt with:
#
# cd %IDL_ROOT%
# %LORICA_ROOT%\tao_ifr -ORBInitRef InterfaceRepository=file://%LORICA_ROOT%\ifr.ior BrutusLogOn.idl
#
#                       *  ***  * 
#
# Syntax is: 
#          <> ==> Required, [] ==> Optional 
#
#    token/values:
#
#          "<TOKEN><WHITESPACE><VALUE(S)>[WHITESPACE]"
#
#    comment:
#
#          "#[ANY COMBINATION OF COMMENT TEXT AND WHITESPACE]"
#
# The tokens and values in this configuration file are case
# sensitive.
#
# Every option is clearly marked MANDATORY it is otherwise
# optional.
# 
# It is not allowed to start a line with a whitespace
# character unless that line is composed of whitespace 
# characters only. A whitespace character is defined as
# ' ', '\t' or '\r'.
# 
# The order of normal configuration tokens does not matter. Any
# trailing whitespace is ignored.
#
# The keyword token "IFR_CmdOption" and "ORB_Option" is 
# recognized by the parser to the effect that on WIndows you can 
# do things like:
#
# ORB_Option -ORBDebug
# ORB_Option -ORBLogFile
# ORB_Option C:\orb.log
#
# While on e.g. Linux you can do:
#
# ORB_Option -ORBDebug
# ORB_Option -ORBLogFile
# ORB_Option /home/some_user/tmp/orb.log
#
# The ORB in question will then be given the following 
# command-line options:
#
# "-ORBDebug -ORBLogFile C:\orb.log"
#
# The order is obviously important when specifying ORB options.
# The placement of the ORB options in the configuration file
# does not matter as long as their internal ordering are 
# kept. ORB options can thus be interplaced in between normal
# options if so desired.
#
# IFR_CmdOption is parsed to construct command line options for
# any collated IFR service.
#
# ORB_Option is parsed to construct command line options 
# for any ORB which is used by Lorica. 
#


#################################################################
#                                                               #
#          ! !!! ! CONFIGURATION OPTIONS BELOW ! !!! !          #
#                                                               #
#    Please see the generic configuration file for other        #
#    potentially useful options                                 #
#                                                               #
#################################################################

# The format of a Lorica endpoint is:
#
# [HOSTNAME]<:PORT NUMBER>[/ssl_port=SSL_PORT_NUMBER][/alias=lorica.example.com]
#
# You must separate the '/ssl' and '/alias' options with '&' if 
# they are both used, e.g:
#
# [HOSTNAME]<:PORT NUMBER>[/ssl_port=SSL_PORT_NUMBER&alias=lorica.example.com]
#

# 
# You MAY replace "localhost" below with the IP address or 
# hostname of your Lorica server. However, that is only needed 
# if the Lorica server host isn't the same as the Brutus server
# host. 
#
# Do not change the hostname if Brutus Server and Lorica are
# both on localhost.
#
#Internal_Address localhost:4080/ssl_port=4081
Internal_Address localhost:4080

# 
# You MUST replace <ADDRESS> below with the IP address or hostname
# of your Lorica server.
#
# The default value is:
#
#  External_Address <ADDRESS>:4082
#
#
# "4082" is the default port on which Lorica will accept traffic. Do
# not change it. You MUST replace <ADDRESS> with the IP address or DNS
# resolvable hostname of your server which may be "192.168.45.8" or
# "brutus.example.com". This is usually fairly straightforward:
# 
#    External_Address 192.168.45.8:4082
#
#  or
# 
#   External_Address brutus.example.com:4082
# 
#
# If you have several network cards in your server, then you need to
# choose the IP address of the one through which client will be
# contacting the server. It becomes a wee bit more complicated if your
# clients are beyond a router or firewall that does NAT to shield
# internal servers. Like this:
# 
#   Clients <==> Router/Firewall <==> BrutusServer
# 
# 
# You "real" physical IP address of "BrutusServer" may be "192.168.45.8"
# but external clients needs to use "195.41.139.234" or "brutus.example.com"
# to contact your server. The router/firewall will do the translation
# between "brutus.example.com" and "192.168.45.8" when traffic to and from the
# server passes.
# 
# This necessitates that BrutusServer informs all external clients that its
# client visible address is "brutus.example.com" not "192.168.45.8". This is
# easily accomplished by the "alias" option:
# 
#   External_Address 192.168.45.8:4082/alias=brutus.example.com
# 
# 
# Now all external clients will be able to connect to "BrutusServer" on
# "brutus.example.com:4082" as long as the router/firewall is configured to
# redirect all traffic on "brutus.example.com" port 4082 to "192.168.45.8" port
# 4082.
#
External_Address <ADDRESS>:4082

#
# MANDATORY if ssl_port is specified on any endpoint.
#
#ORB_Option -ORBSvcConf lorica.ssliop

#
# This option instructs Lorica to use UTF-8 for non-wide characters
# and UTF-16 for wide characters. You specifically need this to ensure
# that your strings isn't modified while in flight.
#
# This service configuration file must be merged with lorica.ssliop if
# SSL is used as well.
#
ORB_Option -ORBSvcConf lorica_codeset.conf

#
# Generic options
#
Generic_Evaluator yes
Collocate_IFR yes

